name: Deploy MYAPP to Render

on:
  workflow_dispatch: # manual trigger
  push:
    branches:
      - main
    paths:
      - "myapp/**"

jobs:
  deploy-myapp:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v3

      - name: üöÄ Trigger MYAPP Deploy
        id: trigger_myapp
        run: |
          echo "üîî Triggering deploy on Render for MYAPP..."
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_MYAPP_ID }}/deploys)

          echo "üì° Raw trigger response: $RESPONSE"

          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.id // empty')

          if [ -z "$DEPLOY_ID" ]; then
            echo "‚ùå Failed to get deploy ID"
            exit 1
          fi

          echo "‚úÖ Got deploy ID: $DEPLOY_ID"
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT

      - name: ‚è≥ Wait for MYAPP Deploy
        run: |
          DEPLOY_ID="${{ steps.trigger_myapp.outputs.deploy_id }}"
          echo "‚è≥ Waiting for MYAPP deploy to finish (Deploy ID: $DEPLOY_ID)..."

          for i in {1..30}; do
            echo "üîÑ Checking status (attempt $i/30)..."
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              https://api.render.com/v1/deploys/$DEPLOY_ID)

            echo "üîç Raw status response: $RESPONSE"

            STATUS=$(echo "$RESPONSE" | jq -r '.status // "unknown"')
            echo "üì° Current status: $STATUS"

            if [ "$STATUS" = "live" ]; then
              echo "‚úÖ Deploy succeeded!"
              exit 0
            elif [ "$STATUS" = "failed" ]; then
              echo "‚ùå Deploy failed!"
              exit 1
            fi
            sleep 10
          done

          echo "‚ö†Ô∏è Timed out waiting for deploy"
          exit 1
