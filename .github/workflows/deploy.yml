name: Deploy to Render

on:
  push:
    branches:
      - main
  workflow_dispatch: # manual trigger from GitHub UI

jobs:
  deploy-myapp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Trigger Render Deploy (MYAPP)
        id: trigger-myapp
        run: |
          echo "üöÄ [MYAPP] Triggering deploy..."
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_MYAPP_ID }}/deploys)

          echo "üîç [MYAPP] Raw trigger response: $RESPONSE"
          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.id // empty')
          if [ -z "$DEPLOY_ID" ]; then
            echo "‚ùå [MYAPP] Failed to get deploy ID"
            exit 1
          fi
          echo "‚úÖ [MYAPP] Got deploy ID: $DEPLOY_ID"
          echo "MYAPP_DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_ENV

      - name: Wait for Deploy to Finish (MYAPP)
        run: |
          echo "‚è≥ [MYAPP] Waiting for deploy to finish..."
          for i in {1..30}; do
            echo "üîÑ [MYAPP] Checking status (attempt $i/30)..."
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              https://api.render.com/v1/deploys/$MYAPP_DEPLOY_ID)

            echo "üîç [MYAPP] Raw status response: $RESPONSE"
            STATUS=$(echo "$RESPONSE" | jq -r '.status // "unknown"')
            echo "üì° [MYAPP] Current status: $STATUS"

            if [ "$STATUS" = "live" ]; then
              echo "‚úÖ [MYAPP] Deploy succeeded!"
              exit 0
            elif [ "$STATUS" = "failed" ]; then
              echo "‚ùå [MYAPP] Deploy failed!"
              exit 1
            fi
            sleep 10
          done
          echo "‚ö†Ô∏è [MYAPP] Timed out waiting for deploy"
          exit 1

  deploy-user:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Trigger Render Deploy (USER)
        id: trigger-user
        run: |
          echo "üöÄ [USER] Triggering deploy..."
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_USER_ID }}/deploys)

          echo "üîç [USER] Raw trigger response: $RESPONSE"
          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.id // empty')
          if [ -z "$DEPLOY_ID" ]; then
            echo "‚ùå [USER] Failed to get deploy ID"
            exit 1
          fi
          echo "‚úÖ [USER] Got deploy ID: $DEPLOY_ID"
          echo "USER_DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_ENV

      - name: Wait for Deploy to Finish (USER)
        run: |
          echo "‚è≥ [USER] Waiting for deploy to finish..."
          for i in {1..30}; do
            echo "üîÑ [USER] Checking status (attempt $i/30)..."
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              https://api.render.com/v1/deploys/$USER_DEPLOY_ID)

            echo "üîç [USER] Raw status response: $RESPONSE"
            STATUS=$(echo "$RESPONSE" | jq -r '.status // "unknown"')
            echo "üì° [USER] Current status: $STATUS"

            if [ "$STATUS" = "live" ]; then
              echo "‚úÖ [USER] Deploy succeeded!"
              exit 0
            elif [ "$STATUS" = "failed" ]; then
              echo "‚ùå [USER] Deploy failed!"
              exit 1
            fi
            sleep 10
          done
          echo "‚ö†Ô∏è [USER] Timed out waiting for deploy"
          exit 1

  deploy-admin-spring:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Trigger Render Deploy (ADMIN SPRING)
        id: trigger-admin
        run: |
          echo "üöÄ [ADMIN-SPRING] Triggering deploy..."
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${{ secrets.RENDER_ADMIN_SPRING_ID }}/deploys)

          echo "üîç [ADMIN-SPRING] Raw trigger response: $RESPONSE"
          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.id // empty')
          if [ -z "$DEPLOY_ID" ]; then
            echo "‚ùå [ADMIN-SPRING] Failed to get deploy ID"
            exit 1
          fi
          echo "‚úÖ [ADMIN-SPRING] Got deploy ID: $DEPLOY_ID"
          echo "ADMIN_DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_ENV

      - name: Wait for Deploy to Finish (ADMIN SPRING)
        run: |
          echo "‚è≥ [ADMIN-SPRING] Waiting for deploy to finish..."
          for i in {1..30}; do
            echo "üîÑ [ADMIN-SPRING] Checking status (attempt $i/30)..."
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              https://api.render.com/v1/deploys/$ADMIN_DEPLOY_ID)

            echo "üîç [ADMIN-SPRING] Raw status response: $RESPONSE"
            STATUS=$(echo "$RESPONSE" | jq -r '.status // "unknown"')
            echo "üì° [ADMIN-SPRING] Current status: $STATUS"

            if [ "$STATUS" = "live" ]; then
              echo "‚úÖ [ADMIN-SPRING] Deploy succeeded!"
              exit 0
            elif [ "$STATUS" = "failed" ]; then
              echo "‚ùå [ADMIN-SPRING] Deploy failed!"
              exit 1
            fi
            sleep 10
          done
          echo "‚ö†Ô∏è [ADMIN-SPRING] Timed out waiting for deploy"
          exit 1
